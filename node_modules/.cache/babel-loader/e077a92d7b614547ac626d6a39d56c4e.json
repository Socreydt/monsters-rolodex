{"ast":null,"code":"var _jsxFileName = \"/Users/sam.creydt/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.componet';\nimport './App.css';\n\nclass App extends Component {\n  // Constructor runs first before anything is called.\n  // This is a life cycle method, like \"OnInit\"\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        searchField: e.target.value\n      });\n    };\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  } // This is a life cycle method, it's like \"OnLoad\"\n\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  } // This is a function of the class 'App'\n  // We use functions, like this because we can use it other places. We can now call this function in different areas\n  // Write code onces and reuse it somewhere else\n\n\n  // This is a life cycle method, like the ability to \"Paint\" the screen\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" Monsters Rolodex \"), React.createElement(SearchBox, {\n      placeholder: \"search monsters\",\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sam.creydt/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","handleChange","e","setState","searchField","target","value","state","monsters","componentDidMount","fetch","then","response","json","users","render","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,4CAAzB;AACA,SAASC,SAAT,QAA0B,6CAA1B;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA2B;AACzB;AACA;AACAI,EAAAA,WAAW,GAAE;AACX;;AADW,SAkBbC,YAlBa,GAkBGC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAvB,OAAd;AACD,KApBY;;AAEX,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXJ,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID,GATwB,CAWzB;;;AACAK,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAI,KAAKX,QAAL,CAAc;AAACK,MAAAA,QAAQ,EAAGM;AAAZ,KAAd,CAFf;AAGD,GAhBwB,CAkBzB;AACA;AACA;;;AAKA;AACAC,EAAAA,MAAM,GAAE;AAEN,UAAM;AAAEP,MAAAA,QAAF;AAAYJ,MAAAA;AAAZ,QAA4B,KAAKG,KAAvC;AAEA,UAAMS,gBAAgB,GAAGR,QAAQ,CAACS,MAAT,CAAgBC,OAAO,IAC9CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCjB,WAAW,CAACgB,WAAZ,EAApC,CADuB,CAAzB;AAIA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAGE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAC,iBAAvB;AAAyC,MAAA,YAAY,EAAE,KAAKnB,YAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEe,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA3CwB;;AA+C3B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.componet';\n\nimport './App.css';\n\nclass App extends Component{\n  // Constructor runs first before anything is called.\n  // This is a life cycle method, like \"OnInit\"\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  // This is a life cycle method, it's like \"OnLoad\"\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n\n  // This is a function of the class 'App'\n  // We use functions, like this because we can use it other places. We can now call this function in different areas\n  // Write code onces and reuse it somewhere else\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  // This is a life cycle method, like the ability to \"Paint\" the screen\n  render(){\n\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1> Monsters Rolodex </h1>\n        \n        <SearchBox placeholder='search monsters' handleChange={this.handleChange} />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}