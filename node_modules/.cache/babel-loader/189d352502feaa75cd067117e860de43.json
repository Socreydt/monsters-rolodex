{"ast":null,"code":"import _classCallCheck from\"/Users/sam.creydt/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sam.creydt/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/sam.creydt/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/sam.creydt/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/sam.creydt/monsters-rolodex/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{CardList}from'./components/card-list/card-list.component';import{SearchBox}from'./components/search-box/search-box.componet';import'./App.css';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);// Constructor runs first before anything is called.\n// This is a life cycle method, like \"OnInit\"\nfunction App(){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this));_this.handleChange=function(e){_this.setState({searchField:e.target.value});};_this.state={monsters:[],searchField:''};return _this;}// This is a life cycle method, it's like \"OnLoad\"\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monsters:users});});}// This is a function of the class 'App'\n// We use functions, like this because we can use it other places. We can now call this function in different areas\n// Write code onces and reuse it somewhere else\n},{key:\"render\",// This is a life cycle method, like the ability to \"Paint\" the screen\nvalue:function render(){var _this$state=this.state,monsters=_this$state.monsters,searchField=_this$state.searchField;var filteredMonsters=monsters.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",null,\" Monsters Rolodex \"),React.createElement(SearchBox,{placeholder:\"search monsters\",handleChange:this.handleChange}),React.createElement(CardList,{monsters:filteredMonsters}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/sam.creydt/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","SearchBox","App","handleChange","e","setState","searchField","target","value","state","monsters","fetch","then","response","json","users","filteredMonsters","filter","monster","name","toLowerCase","includes"],"mappings":"ulBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,OAASC,QAAT,KAAyB,4CAAzB,CACA,OAASC,SAAT,KAA0B,6CAA1B,CAEA,MAAO,WAAP,C,GAEMC,CAAAA,G,6DACJ;AACA;AACA,cAAa,qCACX,uEADW,MAkBbC,YAlBa,CAkBE,SAACC,CAAD,CAAO,CACpB,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAEF,CAAC,CAACG,MAAF,CAASC,KAAvB,CAAd,EACD,CApBY,CAEX,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,EADC,CAEXJ,WAAW,CAAE,EAFF,CAAb,CAFW,aAMZ,CAED;6EACmB,iBACjBK,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACV,QAAL,CAAc,CAACK,QAAQ,CAAGK,KAAZ,CAAd,CAAJ,EAFX,EAGD,CAED;AACA;AACA;gBAKA;uBACQ,iBAE4B,KAAKN,KAFjC,CAEEC,QAFF,aAEEA,QAFF,CAEYJ,WAFZ,aAEYA,WAFZ,CAIN,GAAMU,CAAAA,gBAAgB,CAAGN,QAAQ,CAACO,MAAT,CAAgB,SAAAC,OAAO,QAC9CA,CAAAA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCf,WAAW,CAACc,WAAZ,EAApC,CAD8C,EAAvB,CAAzB,CAIA,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,mDADF,CAGE,oBAAC,SAAD,EAAW,WAAW,CAAC,iBAAvB,CAAyC,YAAY,CAAE,KAAKjB,YAA5D,EAHF,CAKE,oBAAC,QAAD,EAAU,QAAQ,CAAEa,gBAApB,EALF,CADF,CASD,C,iBA3CejB,S,EA+ClB,cAAeG,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.componet';\n\nimport './App.css';\n\nclass App extends Component{\n  // Constructor runs first before anything is called.\n  // This is a life cycle method, like \"OnInit\"\n  constructor(){\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  // This is a life cycle method, it's like \"OnLoad\"\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n\n  // This is a function of the class 'App'\n  // We use functions, like this because we can use it other places. We can now call this function in different areas\n  // Write code onces and reuse it somewhere else\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n\n  // This is a life cycle method, like the ability to \"Paint\" the screen\n  render(){\n\n    const { monsters, searchField } = this.state;\n\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1> Monsters Rolodex </h1>\n        \n        <SearchBox placeholder='search monsters' handleChange={this.handleChange} />\n\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}